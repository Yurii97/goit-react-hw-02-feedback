{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Sectoin.styled.jsx","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["BtnList","styled","ul","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","e","type","onClick","SectionFeedback","div","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","addFeedback","setState","prevState","values","this","reduce","acc","value","percentage","countTotalFeedback","toFixed","feedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAEaA,EAAUC,IAAOC,GAAV,qF,OCgBLC,I,EAAAA,EAhBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,mCACE,cAACL,EAAD,UACGM,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAC,OACzB,6BACE,wBAAQC,KAAK,SAASC,QAAS,kBAAMN,EAAgBI,IAArD,SACGA,KAFIA,WCLNG,EAAkBX,IAAOY,IAAV,qECSbC,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,eAACJ,EAAD,WACGG,GAAS,6BAAKA,IACdC,MCQQC,MAdf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,mCACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,cCAOC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,mCACE,4BAAIA,OCGJC,E,4MACJC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,YAAY,SAAClB,GACX,EAAKmB,UAAS,SAACC,GAAD,sBACVpB,EAAGoB,EAAUpB,GAAG,O,wDAItB,WAEE,OADiBH,OAAOwB,OAAOC,KAAKL,OAClBM,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAIC,IAAO,K,6CAGtD,WACE,IAAMC,EAAaJ,KAAKL,MAAMR,KAAKa,KAAKK,qBAAqB,IAC7D,OAAOD,EAAaA,EAAWE,UAAW,I,oBAG5C,WACE,IAAMC,EAAWP,KAAKL,MAChBL,EAAMU,KAAKK,qBACXD,EAAaJ,KAAKQ,kCACxB,OACE,qCACE,cAAC,EAAD,CAASxB,MAAO,wBAAhB,SACE,cAAC,EAAD,CAAiBX,QAASkC,EAAUjC,gBAAiB0B,KAAKJ,gBAE5D,cAAC,EAAD,CAASZ,MAAO,aAAhB,SACGM,EAAM,EAAG,cAAC,EAAD,CACRH,KAAMoB,EAASpB,KACfC,QAASmB,EAASnB,QAClBC,IAAKkB,EAASlB,IACdC,MAAOA,EACPC,mBAAoBa,IAAgB,cAAC,EAAD,CAAcX,QAAQ,kC,GAtCpDgB,aA8CHf,IC/CfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d6fe569f.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const BtnList = styled.ul`\r\n  display: flex;\r\n  & li {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n","import { BtnList } from './FeedbackOptions.styled';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      <BtnList>\r\n        {Object.keys(options).map(e => (\r\n          <li key={e}>\r\n            <button type=\"button\" onClick={() => onLeaveFeedback(e)}>\r\n              {e}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </BtnList>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const SectionFeedback = styled.div`\r\n  padding: 0 50px;\r\n  margin-top: 50px;\r\n`;\r\n","import { SectionFeedback } from './Sectoin.styled';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <SectionFeedback>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </SectionFeedback>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","function Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <>\r\n      <ul>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total}</li>\r\n        <li>Positive feedback: {positivePercentage} %</li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n","function Notification({ message }) {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions.jsx';\nimport Section from './components/Section/Section.jsx';\nimport Statistics from './components/Statistics/Statistics.jsx';\nimport Notification from './components/Notification/Notification.jsx';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback=(e)=>{    \n    this.setState((prevState) => (\n      {[e]:prevState[e]+1}\n      )\n    );    \n  }\n  countTotalFeedback(){\n    const arrayValue=Object.values(this.state);    \n    return arrayValue.reduce((acc, value)=> (acc+value),0)\n  };\n\n  countPositiveFeedbackPercentage(){\n    const percentage = this.state.good/this.countTotalFeedback()*100\n    return percentage ? percentage.toFixed() :0;\n  };\n\n  render() {\n    const feedback = this.state;\n    const total=this.countTotalFeedback()\n    const percentage = this.countPositiveFeedbackPercentage()\n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions options={feedback} onLeaveFeedback={this.addFeedback}/>\n        </Section>\n        <Section title={'Statistics'}>\n          {total>0?(<Statistics \n            good={feedback.good} \n            neutral={feedback.neutral} \n            bad={feedback.bad} \n            total={total} \n            positivePercentage={percentage}/>):(<Notification message=\"There is no feedback\"/>)}\n          \n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}